{ 
   "apiVersion"      : "1.0.0",
   "swaggerVersion"  : "1.2",
   "basePath"        : "/api/v1",
   "resourcePath"    : "/cloudlets",
   "produces"        : [
      "application/json"
   ],
   "apis": [
      {
         "path": "/cloudlets",
         "operations": [
            {
               "method"        : "GET",
               "summary"       : "Export Cloudlet data.",
               "notes"         : "This endpoint returns the cloudlet id associated with the presented token.",
               "type"          : "UserCloudlet",
               "responseClass" : "UserCloudlet",
               "nickname"      : "getCloudletId",
               "parameters"    : [
                  {
                     "name"        : "Authorization",
                     "description" : "Auth Token",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "header"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  }
               ]
            }
         ]
      },
      {
         "path": "/cloudlets/all",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Retrieves all Cloudlets on the platform.",
               "notes"      : "Retrieves all Cloudlets on the platform.",
               "type": "array",
               "items": {
                  "$ref" : "UserCloudlet"
               },
               "nickname"   : "getCloudlets",
               "parameters" : [
                  {
                     "name"        : "offset",
                     "description" : "Pagination feature, the amount of objects to offset.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"        : "limit",
                     "description" : "The amount of objects to return.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      }
   ],
   "models": {
      "UserCloudlet": {
         "id": "UserCloudlet",
         "properties": {
            "@id": {
               "type"        : "string",
               "description" : "Unique identifier for the Cloudlet.",
               "required"    : false
            }
         }
      },
      "CloudletResponse": {
         "id": "CloudletResponse",
         "properties": {
            "id": {
               "type"        : "string",
               "description" : "The ID of the Cloudlet acted upon.",
               "required"    : true
            }
         }
      },
      "Status": {
         "id": "Status",
         "properties": {
            "success": {
               "type"        : "boolean",
               "description" : "True if action was successful.",
               "required"    : true
            }
         }
      },
      "CloudletErrorResponse": {
         "id": "CloudletErrorResponse",
         "properties": {
            "error": {
               "type"        : "string",
               "description" : "Description of error that occurred.",
               "required"    : true
            }
         }
      }
   }
}
